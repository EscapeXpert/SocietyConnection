<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title><%= post.title %></title>
</head>
<body>
<a href="/board/<%= board.id %>"><%= board.name %></a>
<div>
    <% if(post.creator_id === user.id) { %>
        <a href="/post/<%= post.id %>/modify?board_id=<%= board.id %>" id="modify">수정</a>
        <a href="#" id="delete">삭제</a>
    <% } %>
    <% if(user.grade === 5) { %>
        <a href="#" id="notice">
            <% if(post.is_notice) { %>
                공지 해제
            <% } else { %>
                공지 등록
            <% } %>
        </a>
    <% } %>
</div>
<div>
    <% if(post.User.profile_image != null) { %>
        <img src="<%= post.User.profile_image %>" alt="" width="32" height="32">
    <% } else { %>
        <img src="/public/icon/default-user-profile-image.svg" alt="" width="32" height="32">
    <% } %>
    <a href="/profile/<%= post.User.nickname %>"><%= post.User.nickname %></a>
    <span><%= post.toJSON().grade %></span>
    <% if(post.creator_id !== user.id) { %>
        <a href='#'
           onclick="window.open('/message/write?target_nickname=<%= post.User.nickname %>','<%= post.User.nickname %>', 'status=no, toolbar=no, menubar=no, width=400, height=300');return false">쪽지</a>
    <% } %>
</div>
<div>
    <div>
        <h3><%= post.title %></h3>
        <div>
            <% if(files.length > 0) {%>
                <p>첨부파일</p>
            <%}%>
            <ul>
                <% for(file of files) { %>
                    <li><a href="<%= file.file_path %>" download="<%= file.file_name %>"><%= file.file_name %></a></li>
                <% } %>
            </ul>
        </div>
        <div class="content">
            <%- post.content %>
        </div>
    </div>

    <div>
        <a href="#" id="like">
            <% if(is_like == null) { %>
                <img src="/public/icon/red-empty-heart.svg" width="16" height="16" alt="">
            <% } else { %>
                <img src="/public/icon/red-heart.svg" width="16" height="16" alt="">
            <% } %>
        </a>
        <a href="#" id="go_like_list">좋아요 <%= like_list.length %></a>
        <a href="#" id="go_comment_list">댓글 <%= comment_list.length %></a>
    </div>
    <div id="like_list" class="like_list" style="display: none">
        <ul>
            <% for(let like_user of like_list) { %>
                <li>
                    <% if(like_user.User.profile_image != null) { %>
                        <img src="<%= like_user.User.profile_image %>" alt="" width="32" height="32">
                    <% } else { %>
                        <img src="/public/icon/default-user-profile-image.svg" alt="" width="32" height="32">
                    <% } %>
                    <a href="/profile/<%= like_user.User.nickname %>"><%= like_user.User.nickname %></a>
                </li>
            <% } %>
        </ul>
    </div>
    <div id="comment_list" class="comment_list" style="display: block">
        <h3>댓글</h3>
        <ul>
            <% for(let comment of comment_list) { %>
                <li id="<%= comment.id %>" class="comment_box">
                    <% if(comment.User.profile_image != null) { %>
                        <img src="<%= comment.User.profile_image %>" alt="" width="32" height="32">
                    <% } else { %>
                        <img src="/public/icon/default-user-profile-image.svg" alt="" width="32" height="32">
                    <% } %>
                    <a href="/profile/<%= comment.User.nickname %>"><%= comment.User.nickname %></a>
                    <p><%= comment.content %></p>
                    <% const offset = new Date().getTimezoneOffset() * 60000 %>
                    <% const date = new Date(comment.created_at - offset) %>
                    <span><%= date.toISOString().slice(0, 16).replace('T', ' ') %></span>
                    <a href="#" id="open_reply_comment">답글</a>
                    <% if(user.id === comment.creator_id) { %>
                        <a href="#" id="comment_delete">삭제</a>
                    <% } %>
                </li>
                <% if(reply_comment_map.has(comment.id)) { %>
                    <% const reply_comment_list = reply_comment_map.get(comment.id) %>
                    <% for(let reply_comment of reply_comment_list) { %>
                        <li id="<%= reply_comment.id %>" class="reply_comment_box" style="padding-left: 30px">
                            <% if(reply_comment.User.profile_image != null) { %>
                                <img src="<%= reply_comment.User.profile_image %>" alt="" width="32" height="32">
                            <% } else { %>
                                <img src="/public/icon/default-user-profile-image.svg" alt="" width="32" height="32">
                            <% } %>
                            <a href="/profile/<%= reply_comment.User.nickname %>"><%= reply_comment.User.nickname %></a>
                            <p><%= reply_comment.content %></p>
                            <% const offset = new Date().getTimezoneOffset() * 60000 %>
                            <% const date = new Date(reply_comment.created_at - offset) %>
                            <span><%= date.toISOString().slice(0, 16).replace('T', ' ') %></span>
                            <a href="#" id="open_reply_comment">답글</a>
                            <% if(user.id === comment.creator_id) { %>
                                <a href="#" id="reply_comment_delete">삭제</a>
                            <% } %>
                        </li>
                    <% } %>
                <% } %>
            <% } %>
        </ul>
        <p><%= user.nickname %></p>
        <label for="comment_content"></label>
        <textarea name="comment_content" id="comment_content" placeholder="댓글을 남겨보세요." rows="5" cols="50"
                  style="resize: none"></textarea>
        <div class="comment_button_box">
            <a href="#" id="submit_comment">등록</a>
        </div>
    </div>
</div>
</body>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
    <% if (post.creator_id === user.id) { %>
    const delete_tag = document.querySelector('#delete');
    delete_tag.addEventListener('click', async function (event) {
        event.preventDefault();
        await axios.post('/post/<%= post.id %>/delete', {
            board_id: <%= board.id %>
        })
            .then((response) => {
                if (response.data === 'success') {
                    location.href = '/board/<%= board.id %>';
                } else if (response.data === 'not creator') {
                    alert("자신의 게시글만 삭제하실 수 있습니다.");
                    history.back();
                }
            })
            .catch((err) => {
                console.error(err);
            });
    });
    <% } %>

    const like_tag = document.querySelector('#like');
    like_tag.addEventListener('click', async function (event) {
        event.preventDefault();
        await axios.post('/post/<%= post.id %>/like')
            .then((response) => {
                if (response.data === 'success') {
                    location.reload();
                }
            })
            .catch((err) => {
                console.error(err);
            });
    });

    let is_show_comment = true;
    const like_list_tag = document.querySelector('#go_like_list');
    like_list_tag.addEventListener('click', function (event) {
        event.preventDefault();
        if (is_show_comment) {
            document.querySelector('.like_list').style.display = 'block';
            document.querySelector('.comment_list').style.display = 'none';
            is_show_comment = false;
        }
    });
    const comment_list_tag = document.querySelector('#go_comment_list');
    comment_list_tag.addEventListener('click', function (event) {
        event.preventDefault();
        if (!is_show_comment) {
            document.querySelector('.like_list').style.display = 'none';
            document.querySelector('.comment_list').style.display = 'block';
            is_show_comment = true;
        }
    });
    const comment_delete_tags = document.querySelectorAll('#comment_delete');
    comment_delete_tags.forEach(comment_delete_tag => {
        comment_delete_tag.addEventListener('click', async function (event) {
            event.preventDefault();
            const comment_id = comment_delete_tag.parentElement.id;
            await axios.post(`/post/<%= post.id %>/comment/${comment_id}/delete`)
                .then((response) => {
                    if (response.data === 'success') {
                        location.reload();
                    } else if (response.data === 'not creator') {
                        alert("자신의 댓글만 삭제할 수 있습니다.");
                        history.back();
                    }
                })
                .catch((err) => {
                    console.error(err);
                });
        })
    });
    const submit_comment_tag = document.querySelector('#submit_comment');
    submit_comment_tag.addEventListener('click', async function (event) {
        event.preventDefault();
        const comment_content = document.querySelector('#comment_content').value;
        axios.post('/post/<%= post.id %>/comment/write', {
            comment_content: comment_content
        })
            .then((response) => {
                if (response.data === 'success') {
                    location.reload();
                }
            })
            .catch((err) => {
                console.error(err);
            });
    })

    let is_open_reply_comment = false;
    const reply_comment_tags = document.querySelectorAll('#open_reply_comment');
    reply_comment_tags.forEach(open_reply_comment_tag => {
        open_reply_comment_tag.addEventListener('click', function (event) {
            event.preventDefault();
            if (is_open_reply_comment) {
                const reply_comment_tag = document.querySelector('#reply_comment');
                reply_comment_tag.remove();
            }
            let comment_id;
            let reply_comment_box_tag = open_reply_comment_tag.parentElement;
            while (true) {
                if (reply_comment_box_tag.className === 'comment_box') {
                    comment_id = reply_comment_box_tag.id;
                    break;
                }
                reply_comment_box_tag = reply_comment_box_tag.previousElementSibling;
            }
            let new_li_tag = document.createElement('li');
            new_li_tag.id = 'reply_comment';
            new_li_tag.innerHTML = '' +
                '<label for="reply_comment_content"></label>' +
                '<textarea name="reply_comment_content" id="reply_comment_content" placeholder="답글을 남겨주세요." rows="5" cols="50" style="resize: none" "></textarea>' +
                '<div class="reply_comment_button_box">' +
                '<a href="#" id="reply_comment_close">취소 </a>' +
                '<a href="#" id="submit_reply_comment">등록</a>' +
                '</div>';
            open_reply_comment_tag.parentElement.after(new_li_tag)

            const reply_comment_close_tag = document.querySelector('#reply_comment_close');
            reply_comment_close_tag.addEventListener('click', function (event) {
                event.preventDefault();
                new_li_tag.remove();
                is_open_reply_comment = false;
            });

            const submit_reply_commit_tag = document.querySelector('#submit_reply_comment');
            submit_reply_commit_tag.addEventListener('click', async function (event) {
                event.preventDefault();
                const content = document.querySelector('#reply_comment_content').value;
                axios.post(`/post/<%= post.id %>/comment/${comment_id}/reply_comment/write`, {
                    reply_comment_content: content
                })
                    .then((response) => {
                        if (response.data === 'success') {
                            location.reload();
                        }
                    })
                    .catch((err) => {
                        console.error(err);
                    });
            });
            is_open_reply_comment = true;
        });
    });

    const reply_comment_delete_tags = document.querySelectorAll('#reply_comment_delete');
    reply_comment_delete_tags.forEach(reply_comment_delete_tag => {
        reply_comment_delete_tag.addEventListener('click', async function (event) {
            event.preventDefault();
            const reply_comment_id = reply_comment_delete_tag.parentElement.id;
            await axios.post(`/post/<%= post.id %>/reply_comment/${reply_comment_id}/delete`)
                .then((response) => {
                    if (response.data === 'success') {
                        location.reload();
                    } else if (response.data === 'not creator') {
                        alert("자신의 답글만 삭제할 수 있습니다.");
                        history.back();
                    }
                })
                .catch((err) => {
                    console.error(err);
                });
        })
    });

    <% if(user.grade === 5) { %>
    const notice_tag = document.querySelector('#notice');
    notice_tag.addEventListener('click', async function (event) {
        event.preventDefault();
        await axios.post('/post/<%= post.id %>/notice')
            .then((response) => {
                if (response.data === 'success') {
                    location.reload();
                } else if (response.data === 'not admin') {
                    alert("관리자만 공지를 설정하실 수 있습니다.");
                    history.back();
                }
            }).catch((err) => {
                console.error(err);
            });
    });
    <% } %>
</script>
</html>